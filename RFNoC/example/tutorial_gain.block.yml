id: tutorial_gain
label: RFNoC gain

templates:
  imports: |-
    import tutorial
  make: |-
    tutorial.gain(
      self.rfnoc_graph,
      uhd.device_addr(${block_args}),
      ${device_select},
      ${instance_select})
    self.${id}.set_int_property('reg_mul', ${reg_mul})
    self.${id}.set_int_property('reg_div', ${reg_div})
    self.${id}.set_int_property('reg_en',  ${reg_en})
  callbacks:
  - set_int_property('reg_mul', ${reg_mul})
  - set_int_property('reg_div', ${reg_div})
  - set_int_property('reg_en', ${reg_en})

# Make one 'parameter' node for every Parameter you want settable from the GUI.

parameters:
- id: reg_mul
  label: Mul log2
  dtype: int
  default: 2
- id: reg_div
  label: Div log2
  dtype: int
  default: 1
- id: reg_en
  label: Gain en
  dtype: int
  default: 1
- id: block_args
  label: Block Args
  dtype: string
  default: ""
- id: device_select
  label: Device Select
  dtype: int
  default: -1
- id: instance_select
  label: Instance Select
  dtype: int
  default: -1
- id: num_ports
  label: Number of Ports
  dtype: int
  default: '1'
  hide: part

# Make one 'inputs' node per input. Include:
#    label (an identifier for the GUI)
#    dtype (data type of expected data)
#    optional (set to 1 for optional inputs)
inputs:
- domain: rfnoc
  label: in
  dtype: 'sc16'
  multiplicity: ${num_ports}

# Make out 'outputs' node per output.
#    label (an identifier for the GUI)
#    dtype (data type of expected data)
#    optional (set to 1 for optional outputs)
outputs:
- domain: rfnoc
  label: out
  dtype: 'sc16'
  multiplicity: ${num_ports}

file_format: 1
